{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertAPP.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","placeholder","onChange","target","GifGridItem","id","title","url","dark","src","alt","width","height","getGifs","catergories","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertAPP","setDark","localStorage","setItem","clickDark","onClick","divRoot","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.10ee472d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Proptypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n        // console.log(inputValue)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue])\r\n            // setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"row\">\r\n            <div className=\"col-xl-5 col-9 px-2\">\r\n                <input\r\n                    className=\"form-control \"\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    placeholder=\"Buscar gif\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"col-xl-1  col-3 \">\r\n                <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: Proptypes.func.isRequired\r\n\r\n}\r\n\r\n\r\nexport default AddCategory","// import  { useState, useEffect } from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url, dark }) => {\r\n\r\n    // console.log({ id, title, url })\r\n\r\n    return (\r\n        <div className=\" col-12 col-md-4 col-xl-3   align-self-center fff px-2\">\r\n            <img src={url} alt={title} width=\"100%\" height=\"240px\" />\r\n            <p className={dark?\"text-center pt-1 text-white animate__animated animate__flash\":\"text-center pt-1 animate__animated animate__flash\"} > {title} </p>\r\n        </div>\r\n    )\r\n\r\n}","export const getGifs = async (catergories) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(catergories)}&api_key=2RVWnwuZtjHCs97yeqj3WHFJ4ehGc3fn`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n\r\n}","// import { useState, useEffect } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import {getGifs} from '../helpers/getGifs';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({ catergories, dark }) => {\r\n    const { data: images, loading } = useFetchGifs(catergories);\r\n    return (\r\n        <div className=\"mt-4\">\r\n            {/* <hr className={dark ? 'bordere-white' : 'bordere-dark'} />\r\n            <hr className={dark ? 'bordere-white' : 'bordere-dark'} /> */}\r\n            {/* <h3 className={dark ? \"text-white\" : \"text-dark\"}>{catergories}</h3> */}\r\n\r\n            { /* {loading ? 'Cargando....': 'Data cargada'} */}\r\n            {loading && <p className={dark ? \"text-white\" : \"text-dark\"}> Cargando.... </p>}\r\n\r\n            <div className=\"row\"> {\r\n                images.map(img => {\r\n                    return <GifGridItem key={img.id} {...img} dark={dark}\r\n                    />\r\n                })\r\n            }\r\n            </div> </div>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (catergories) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGifs(catergories)\r\n            // .then( imgs => setImages(imgs))\r\n            // .then(setImages)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [catergories])\r\n\r\n\r\n\r\n    return state;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertAPP = () => {\r\n\r\n    const [catergories, setCategories] = useState([\"salud, amor, one punch, goku, animes,\"]);\r\n    const [dark, setDark] = useState(true)\r\n\r\n    \r\n    localStorage.setItem(\"dark\", dark)\r\n    \r\n    const clickDark = () => {\r\n        setDark(!dark)\r\n        localStorage.setItem(\"dark\", dark)\r\n    }\r\n    return (\r\n        <div className=\"px-5 pt-5\" className={dark ? \"bgc-dark px-5 pt-5 \" : \"bg-white px-5 pt-5\"} >\r\n            <h2 className={dark ? \"text-white\" : \"text-dark\"}> GifAPP </h2> <\r\n                AddCategory setCategories={setCategories}\r\n            />\r\n            {dark ? <div className=\"circle2 text-center row my-element\" onClick={() => clickDark()}><i className=\"fas fa-sun col-12 align-self-center text-dark\"></i></div> : <div className=\"circle1 text-center row my-element\" onClick={() => clickDark()} ><i className=\"fas fa-moon text-white col-12 align-self-center\"></i></div>}\r\n            <ol>\r\n                {\r\n                    catergories.map(catergories => (\r\n                        <GifGrid key={catergories} catergories={catergories} dark={dark} />\r\n                    ))\r\n                } </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertAPP","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertAPP from \"./GifExpertAPP\";\n\nimport './index.css'\n\n\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(\n\n  <GifExpertAPP />,\n\n  divRoot\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}